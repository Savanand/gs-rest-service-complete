<?xml version="1.0"?>
<project name="Ant_jmeter_project" basedir="." xmlns:ac="antlib:net.sf.antcontrib">

	<description>Testing Jmeter Ant intergration</description>

	<!-- Read the test properties from build.propertis -->
	<property file="build.properties" />
	
	<!-- System & other ant properties -->
	<property environment="env" />
	<property name="jmeter.home" value="${env.JMETER_HOME}"/>
	<property name="test.plan.path" value="${basedir}/${testplan.path}"/>
	<property name="test.result.path" value="${basedir}/result"/>
	<property name="test.log.path" value="${basedir}/log"/>
	<property name="test.report.path" value="${basedir}/output"/>
	<property name="lib.dir" value="${basedir}/lib"/>

	<!-- set classpath with the path containing jars -->
    <path id="jmeter.classpath">
		<fileset dir="${lib.dir}">
				<include name="*.jar"/>
		</fileset>
    </path>
	
	<pathconvert pathsep=":"  property="jmeter.classpath" refid="jmeter.classpath"></pathconvert>
	
	<!-- call all tasks in this sequence -->
	<target name="all"
			depends="clean,show-test-properties,download-plugin-manager,install-plugins,run,generate-report,generate-chart"/>
	
	<!-- clean project by removing all the temp files -->
	<target name="clean">
	     <delete dir="${test.result.path}"/>
		 <delete dir="${test.log.path}"/>
		 <delete dir="${test.report.path}"/>
	</target>
	
	<!-- show test properties -->
	<target name="show-test-properties">
		<echo>JMETER_HOME				: ${jmeter.home}</echo>
		<echo>TEST_PATH				: ${test.plan.path}</echo>
		<echo>THREADGROUP_COUNT			: ${threadgroup.count}</echo>
		<echo>THREADGROUP_RAMPUP			: ${threadgroup.rampup}</echo>
		<echo>THREADGROUP_NUMBER			: ${threadgroup.number}</echo>
		<echo>USER_FIRSTNAME			: ${testuser.firstname}</echo>
		<echo>USER_LASTNAME			: ${testuser.lastname}</echo>
		<echo>USER_EMAIL				: ${testuser.email}</echo>
		<echo>USER_PASSWORD			: ${testuser.password}</echo>
		<echo>USER_ZIPCODE			: ${testuser.zipcode}</echo>
		<echo>USER_USERNAME			: ${testuser.username}</echo>
		<echo>TEST_HOST				: ${testserver.host}</echo>
		<echo>TEST_PORT				: ${testserver.port}</echo>
		<echo>URL_REGISTER			: ${testurl.register}</echo>
		<echo>URL_AUTHENTICATE			: ${testurl.auth}</echo>
	</target>	

	<!-- jmeter ant task -->
	<taskdef
	    name="jmeter"
	    classpathref="jmeter.classpath"
	    classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask"/>

	<!-- To run jmeter test -->
	<target name="run" depends="clean, show-test-properties">
		
		<!-- create dir -->
		<mkdir  dir="${test.result.path}"/>
		<mkdir  dir="${test.log.path}"/>
		
		<jmeter
			jmeterhome="${jmeter.home}"
		    testplan ="${test.plan.path}"
		    resultlog="${test.result.path}/result.jtl"
			jmeterlogfile="${test.log.path}/jmeter.log"
			>
			<jvmarg value="${jvm.arg}"/> <!-- modify as you wish -->
			
			<!-- Force suitable defaults -->
			<property name="jmeter.save.saveservice.output_format" value="csv"/>
			<property name="jmeter.save.saveservice.assertion_results" value="all"/>
			<property name="jmeter.save.saveservice.thread_counts" value="true"/>
			<property name="jmeter.save.saveservice.bytes" value="true"/>
			<property name="jmeter.save.saveservice.response_data.on_error" value="true"/>
			<!-- values for UDV -->
			<property name="threadgroup.count" value="${threadgroup.count}"/>
			<property name="threadgroup.rampup" value="${threadgroup.rampup}"/>
			<property name="threadgroup.number" value="${threadgroup.number}"/>

			<property name="testuser.firstname" value="${testuser.firstname}"/>
			<property name="testuser.lastname" value="${testuser.lastname}"/>
			<property name="testuser.email" value="${testuser.email}"/>
			<property name="testuser.password" value="${testuser.password}"/>
			<property name="testuser.zipcode" value="${testuser.zipcode}"/>
			<property name="testuser.username" value="${testuser.username}"/>

			<property name="testserver.host" value="${testserver.host}"/>
			<property name="testserver.port" value="${testserver.port}"/>
			<property name="testurl.register" value="${testurl.register}"/>
			<property name="testurl.auth" value="${testurl.auth}"/>

		</jmeter>
	</target>
	
	<target name="generate-report">
		  <mkdir  dir="${basedir}/output"/>
		  <java jar="${jmeter.home}/bin/ApacheJMeter.jar" fork="true">
				<arg value="-g" />
				<arg value="${test.result.path}/result.jtl" />
				<arg value="-o" />
				<arg value="${basedir}/output/" />
		  </java>	
	</target>
<!-- Generates charts through commandline options -->
	<taskdef uri="antlib:net.sf.antcontrib" resource="net/sf/antcontrib/antlib.xml">
	    <classpath>
	    	<pathelement location="${lib.dir}/ant-contrib-1.0b3.jar"/>
	  	</classpath>
	</taskdef>
	<target name="generate-chart">
		<ac:for param="reportType" list="LatenciesOverTime,TimesVsThreads,ResponseTimesOverTime,ThreadsStateOverTime,TransactionsPerSecond,ResponseTimesPercentiles,ResponseTimesDistribution">
			  <sequential>
					<exec executable="/bin/sh">
						  <arg value="${jmeter.home}/bin/JMeterPluginsCMD.sh"/>
						  <arg value="--tool"/>
						  <arg value="Reporter"/>
						  <arg value="--generate-png"/>
						  <arg value="${test.result.path}/@{reportType}.png"/>
						  <arg value="--input-jtl"/>
						  <arg value="${test.result.path}/result.jtl"/>
						  <arg value="--plugin-type"/>
						  <arg value="@{reportType}"/>
						  <arg value="--limit-rows"/>
						  <arg value="20"/>				        	
						  <arg value="--width"/>
						  <arg value="800"/>
						  <arg value="--height"/>
						  <arg value="600"/>
					</exec>
			  </sequential>
		</ac:for>
	</target>
	<target name="xslt-report" depends="_message_xalan,clean,show-test-properties">
	<tstamp>
		<format property="report.datestamp" pattern="yyyy/MM/dd HH:mm"/>
	</tstamp>
	<xslt
	classpathref="xslt.classpath"
	force="true"
	in="${test.plan.path}"
	out="${test.report.path}/test.html"
	style="${jmeter.home}/extras/jmeter-results-detail-report_21.xsl">
		<param name="showData" expression="${show-data}"/>
		<param name="showData" expression="${show-data}"/>
		<param name="titleReport" expression="${report.title}"/>
		<param name="dateReport" expression="${report.datestamp}"/>
	</xslt>
</target>


	
	
	<!-- Downloads JMeter Plugins Manager/CMDRunner jar files & Places them in appropriate folders -->
	<target name="download-plugin-manager">
		<get src="${plugins.manager.src}" 
			dest="${jmeter.home}/lib/ext/jmeter-plugins-manager.jar"/>
		<get src="${cmdrunner.src}" 
			dest="${jmeter.home}/lib/cmdrunner-2.0.jar"/>	 
		<java  classname="org.jmeterplugins.repository.PluginManagerCMDInstaller">
			<classpath>
				<pathelement location="${jmeter.home}/lib/ext/jmeter-plugins-manager.jar"/>
			</classpath>
		</java>			 
	</target>

	<!-- Installs all the required plugins -->
	<target name="install-plugins" depends="download-plugin-manager">
		  <exec executable="/bin/sh">
			<arg value="${jmeter.home}/bin/PluginsManagerCMD.sh"/>
			<arg value="install"/>
			<arg value="${plugins.list}"/>
		  </exec>
	</target>		
</project>